name: Deploy Infrastructure (Prod)
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    environment:
      name: prod
    env:
      ENV_NAME: ${{ vars.ENV_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Retrieve Secrets from AWS Secrets Manager
        if: success() 
        run: |
          # Get the secrets ARNs from CDK outputs
          APP_SECRETS_ARN=$(aws cloudformation describe-stacks --stack-name SpotifyFollowManagerInfraStack-prod --query "Stacks[0].Outputs[?OutputKey=='AppSecretArnprod'].OutputValue" --output text)
          DB_SECRET_ARN=$(aws cloudformation describe-stacks --stack-name SpotifyFollowManagerInfraStack-prod --query "Stacks[0].Outputs[?OutputKey=='DatabaseSecretArnprod'].OutputValue" --output text)
          DB_URL=$(aws cloudformation describe-stacks --stack-name SpotifyFollowManagerInfraStack-prod --query "Stacks[0].Outputs[?OutputKey=='DatabaseURLprod'].OutputValue" --output text)
          
          # Get Amplify URL for NEXTAUTH_URL
          AMPLIFY_URL=$(aws cloudformation describe-stacks --stack-name SpotifyFollowManagerInfraStack-prod --query "Stacks[0].Outputs[?OutputKey=='AmplifyBranchURLprod'].OutputValue" --output text)
          
          # Create environment variables file for Amplify
          echo "Creating environment variables file for Amplify"
          echo "DATABASE_URL=$DB_URL" > amplify-env.json
          echo "NEXTAUTH_URL=$AMPLIFY_URL" >> amplify-env.json
          
          if [ ! -z "$APP_SECRETS_ARN" ]; then
            echo "Retrieved App Secrets ARN: $APP_SECRETS_ARN"
            
            # Get the app secrets from AWS Secrets Manager
            SECRETS=$(aws secretsmanager get-secret-value --secret-id $APP_SECRETS_ARN --query SecretString --output text)
            
            # Parse the JSON and set environment variables
            echo "Setting environment variables from AWS Secrets Manager"
            AUTH_SECRET=$(echo $SECRETS | jq -r '.AUTH_SECRET')
            SPOTIFY_CLIENT_ID=$(echo $SECRETS | jq -r '.SPOTIFY_CLIENT_ID')
            SPOTIFY_CLIENT_SECRET=$(echo $SECRETS | jq -r '.SPOTIFY_CLIENT_SECRET')
            
            # Export env vars for next steps
            echo "AUTH_SECRET=$AUTH_SECRET" >> $GITHUB_ENV
            echo "SPOTIFY_CLIENT_ID=$SPOTIFY_CLIENT_ID" >> $GITHUB_ENV
            echo "SPOTIFY_CLIENT_SECRET=$SPOTIFY_CLIENT_SECRET" >> $GITHUB_ENV
            
            # Add to Amplify env file
            echo "AUTH_SECRET=$AUTH_SECRET" >> amplify-env.json
            echo "SPOTIFY_CLIENT_ID=$SPOTIFY_CLIENT_ID" >> amplify-env.json
            echo "SPOTIFY_CLIENT_SECRET=$SPOTIFY_CLIENT_SECRET" >> amplify-env.json
          else
            echo "Warning: App Secrets ARN not found. Make sure the infrastructure is deployed."
          fi
          
          if [ ! -z "$DB_SECRET_ARN" ]; then
            echo "Retrieved Database Secret ARN: $DB_SECRET_ARN"
            
            # Get the DB password from AWS Secrets Manager
            DB_SECRETS=$(aws secretsmanager get-secret-value --secret-id $DB_SECRET_ARN --query SecretString --output text)
            DB_PASSWORD=$(echo $DB_SECRETS | jq -r '.password')
            
            # Process the DATABASE_URL and replace the placeholder
            PROCESSED_DB_URL=$(echo $DB_URL | sed "s|{{resolve:secretsmanager:[^}]\+}}|$DB_PASSWORD|") 
            echo "DATABASE_URL=$PROCESSED_DB_URL" >> amplify-env.json
            
            # Upload the env file to S3 to pass between workflows
            UNIQUE_ID=$(date +%s)
            S3_ENV_PATH="s3://spotify-follow-manager-artifacts-prod-$UNIQUE_ID/amplify-env.json"
            aws s3 mb "s3://spotify-follow-manager-artifacts-prod-$UNIQUE_ID" || true
            aws s3 cp amplify-env.json "$S3_ENV_PATH"
            echo "S3_ENV_PATH=$S3_ENV_PATH" >> $GITHUB_ENV
            echo "S3_BUCKET=spotify-follow-manager-artifacts-prod-$UNIQUE_ID" >> $GITHUB_ENV
          else
            echo "Warning: Database Secret ARN not found. Make sure the infrastructure is deployed."
          fi

      - name: Deploy CDK Stack
        id: deploy
        run: yarn infra:deploy:prod --outputs-file infra-outputs.json
